steps:
  # Pull cached image from last run
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker pull gcr.io/$PROJECT_ID/front-prod:latest || exit 0']

  # Build image from cache
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/$PROJECT_ID/front-prod:latest',
        '--cache-from',
        'gcr.io/$PROJECT_ID/front-prod:latest',
        '.',
      ]

  # Push image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/front-prod:latest']

  # Deploy pushed image to Cloud Run using gcloud cli
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'run',
        'deploy',
        'coffee-and-feel',
        '--image',
        'gcr.io/$PROJECT_ID/front-prod',
        '--region',
        'us-central1',
        '--platform',
        'managed',
        '--allow-unauthenticated',
      ]

    # Copy firebase hosting metadata files to allow for a deploy
  - name: 'gcr.io/$PROJECT_ID/pnpm:latest'
    entrypoint: bash
    args: ['-c', 'cp ci/.firebase/production/frontend/firebase.json .']

  - name: 'gcr.io/$PROJECT_ID/pnpm:latest'
    entrypoint: bash
    args: ['-c', 'cp ci/.firbase/production/frontend/.firebaserc .']

  # Deploy to firebase using custom runner image we've previously deployed
  - name: 'gcr.io/$PROJECT_ID/firebase'
    args: ['deploy', '--project=coffee-and-feel', '--only=hosting']

timeout: 1800s
